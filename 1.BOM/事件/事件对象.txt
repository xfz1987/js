事件对象:在触发DOM上某个事件时，会自动一个事件对象 event(封装所有与事件有关的信息),
          event只有在事件处理程序执行期间才会存在，一旦事件处理程序执行完成，event会自动被销毁


1.DOM中的事件对象
  兼容DOM的浏览器会将 event 作为参数对象传入到事件处理程序中
  var btn = document.getElementById("myBtn");
  btn.onclick = function(event){alert(event.type);};//"click"
  btn.addEventListener("click",function(event){alert(event.type);},false);//"click"

  event属性/方法(都是只读的): window.event || event(方法没有参数时，arguments[0])
  bubbles                   Boolean     事件是否冒泡
  stopPropagation           Function    取消事件的进一步捕获或冒泡，如果bubbles为true，则可以使用这个方法
  stopImmediatePropagation  Function    取消事件的进一步捕获或冒泡，同时阻止任何事件处理程序被调用

  cancelable         Boolean     是否可以取消事件的默认行为
  preventDefault     Function    取消事件的默认行为，如果cancelable是true，则可以使用这个方法，比如a链接的跳转
  defaultPrevented   Boolean     true:表示已经调用了preventDefault()

  target             Element     事件的目标（事件源的元素对象） event.target || window.srcElement
  currentTarget      Element     其事件处理程序正在处理事件的元素
  detail             Integer     与事件相关的细节信息
  eventPhase         Integer     调用事件处理程序的阶段:1.捕获阶段 2.处于目标阶段 3.冒泡阶段

  trusted            Boolean     true:事件是浏览器生成的；false:事件是由开发人员通过js创建的
  type               String      被触发的事件类型
  view               AbstractView 与事件关联的抽象视图，等同于发生事件的window对象


  例1:
  var btn = document.getElementById("myBtn");
  var handler = function(event){
	switch(event.type){
		case "click":
		     //code
		     break;
		case "mouseover":
		     //code
		     break;
		case "mouseout":
		     //code
		     break;
	}
  };

  btn.onclick = handler;
  btn.onmouseover = handler;
  btn.onmouseout = handler;

  例2:取消链接的默认行为
      var link = document.getElementById("myLink");
      link.onclick = function(event){
	   if(event.cancelable){
		event.preventDefault();
	   }
      };


2.IE中的事件对象
  //使用DOM0级方法添加事件处理程序，event对象作为window对象的一个属性存在
  var btn = document.getElementById("myBtn");
  btn.onclick = function(){
	var event = window.event;
	alert(event.type);//"click";
  };

  //使用IE添加事件处理程序,会将event作为参数传入事件处理程序函数中
  btn.attachEvent("onclick",function(event){alert(event.type);});//click

  event属性/方法:
  cancelBubble   Boolean   读/写   默认值是false，true:取消事件冒泡
  returnValue    Boolean   读/写   默认值是true，false:取消事件的默认行为
  srcElement     Element   只读    事件的目标
  type           String    只读    被触发的事件的类型


3.跨浏览器的事件对象
  var EventUtil = {
	addHandler : function(element, type, handler){
		if(element.addEventListener){
			element.addEventListener(type,handler,false);
		}else(element.attachEvent){
			element.attachEvent("on"+type,handler);
		}else{
			element["on"+type] = handler;
		}
	},
	getEvent : function(event){
		//return event = event : window.event;
		return window.event || event;
	},
	getTarget : function(event){
		return event.target || event.srcElement;
	},
	preventDefault : function(event){
		if(event.preventDefault){
			event.preventDefault();
		}else{
			event.returnValue = false;
		}
	},
	removeHandler = function(element, type, handler){
		if(element.reomveEventListener){
			element.reomveEventListener(type,handler,false);
		}else(element.deleteEvent){
			element.detachEvent("on"+type,handler);
		}else{
			element["on"+type] = null;
		}
	},
	stopPropagation : function(event){
		if(event.stopPropagation){
			event.stopPropagation();
		}else{
			event.cancelBubble = true;
		}
	}
  };